==========================================================================================================
# Let's define the default font sizes to make the figures prettier:

plt.rc('font', size=14)
plt.rc('axes', labelsize=14, titlesize=14)
plt.rc('legend', fontsize=14)
plt.rc('xtick', labelsize=10)
plt.rc('ytick', labelsize=10)



plt.subplots_adjust(wspace=0.2, hspace=0.5)

fig = plt.figure() 的参数 figsize 是按照 (W, H) 来设定。
fig.suptitle()


plt.suptitle(title)
plt.title("MSE: %.2f" % mse, fontsize=10)


fig, (ax1, ax2, ax3) = plt.subplots(3, 1, sharex=True, figsize=(16,8))

plt.legend(title="max visit_month", loc='upper center', ncols=len(color_list))   # 有的版本参数是 ncol
==========================================================================================================




==========================================================================================================
plt.figure(figsize=(10, 10))
plt.imshow(image)
plt.axis("off")
plt.figure(figsize=(10, 10))
plt.imshow(image)
plt.imshow(all_masks, alpha=0.5)
plt.axis("off")
plt.figure(figsize=(10, 10))
plt.imshow(all_masks)
plt.axis("off")
plt.show()
==========================================================================================================




==========================================================================================================
fig = plt.figure(figsize=(12, 4))

ax1 = fig.add_subplot(1, 2, 1)
sns.distplot(df_train.Sales,
             # skewness 图例
             label="skewness: {:.2f}".format(df_train.Sales.skew()),
             bins=20,
             rug=True,
             ax=ax1)
plt.legend()
plt.show()
==========================================================================================================






==========================================================================================================
fig, ax1 = plt.subplots()
ax1.set_xlabel("Housing median age")
ax1.set_ylabel("Number of districts")
ax1.hist(housing["housing_median_age"], bins=50)

ax2 = ax1.twinx()   # create a twin axis that shares the same x-axis
color = "blue"
ax2.plot(ages, rbf1, color=color, label="gamma = 0.10")
ax2.plot(ages, rbf2, color=color, label="gamma = 0.03", linestyle="--")
ax2.tick_params(axis="y", labelcolor=color)
ax2.set_ylabel("Age similarity", color=color)

plt.legend(loc="upper left")
save_fig("age_similarity_plot")
plt.show()
==========================================================================================================




==========================================================================================================
plt.figure(figsize=(12, 7))

plt.subplot(2, 2, 1)
plt.bar(xs1, randint_distrib, label="scipy.randint(0, 7 + 1)")
plt.ylabel("Probability")
plt.legend()
plt.axis([-1, 8, 0, 0.2])

plt.subplot(2, 2, 2)
plt.fill_between(xs2, uniform_distrib, label="scipy.uniform(0, 7)")
plt.ylabel("PDF")
plt.legend()
plt.axis([-1, 8, 0, 0.2])

plt.subplot(2, 2, 3)
plt.bar(xs3, geom_distrib, label="scipy.geom(0.5)")
plt.xlabel("Hyperparameter value")
plt.ylabel("Probability")
plt.legend()
plt.axis([0, 7, 0, 1])

plt.subplot(2, 2, 4)
plt.fill_between(xs4, expon_distrib, label="scipy.expon(scale=1)")
plt.xlabel("Hyperparameter value")
plt.ylabel("PDF")
plt.legend()
plt.axis([0, 7, 0, 1])

plt.show()
==========================================================================================================





==========================================================================================================
n_rows = math.ceil(p_len/2)
figure, axis = plt.subplots(n_rows, 2, figsize=(15, n_rows*6))
plt.subplots_adjust(hspace=0.5, wspace=0.3)

for i, month in enumerate(unique_month):
    row = i//2
    col = i % 2
    plot_df = pro_plot_df[pro_plot_df['visit_month']==month]
    bp = sns.barplot(ax=axis[row, col], x=plot_df['UniProt'], y=plot_df['NPX'])
    #bp.set(xticklabels=[])
    bp.set_xticklabels(bp.get_xticklabels(), rotation=90, size = 7)
    axis[row, col].set_title('visit_month ' + str(month))
plt.show()


==========================================================================================================
import matplotlib as mpl
cmap = mpl.colormaps['tab20']
cmap
==========================================================================================================



==========================================================================================================
plt.xticks(np.linspace(0, 108, 10))

plt.gca().yaxis.set_major_locator(MaxNLocator(integer=True))
==========================================================================================================




==========================================================================================================
plt.grid(axis="x")


==========================================================================================================
==========================================================================================================
==========================================================================================================
==========================================================================================================
==========================================================================================================
==========================================================================================================
==========================================================================================================
==========================================================================================================
==========================================================================================================
==========================================================================================================
==========================================================================================================
==========================================================================================================
==========================================================================================================
==========================================================================================================
==========================================================================================================
==========================================================================================================
==========================================================================================================
==========================================================================================================
==========================================================================================================
==========================================================================================================
==========================================================================================================
==========================================================================================================
==========================================================================================================
==========================================================================================================